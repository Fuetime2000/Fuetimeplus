"""Add verified field to user model

Revision ID: 868c3cef9b0f
Revises: 
Create Date: 2025-08-29 21:53:42.255283

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '868c3cef9b0f'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    # First check if the statuses table exists before trying to drop it
    conn = op.get_bind()
    inspector = sa.inspect(conn)
    tables = inspector.get_table_names()
    
    if 'statuses' in tables:
        op.drop_table('statuses')
    
    # Do the same for device_info
    if 'device_info' in tables:
        with op.batch_alter_table('device_info', schema=None) as batch_op:
            if 'ix_device_info_user_id' in [idx['name'] for idx in inspector.get_indexes('device_info')]:
                batch_op.drop_index(batch_op.f('ix_device_info_user_id'))
        op.drop_table('device_info')
    # First add the column as nullable
    with op.batch_alter_table('user', schema=None) as batch_op:
        batch_op.add_column(sa.Column('verified', sa.Boolean(), nullable=True))
    
    # Then update all existing rows to have a default value
    op.execute('UPDATE "user" SET verified = 0')
    
    # Finally alter the column to be NOT NULL
    with op.batch_alter_table('user', schema=None) as batch_op:
        batch_op.alter_column('verified', existing_type=sa.Boolean(), nullable=False, server_default='0')

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('user', schema=None) as batch_op:
        batch_op.drop_column('verified')

    op.create_table('device_info',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('user_id', sa.INTEGER(), nullable=False),
    sa.Column('device_model', sa.VARCHAR(length=100), nullable=True),
    sa.Column('device_brand', sa.VARCHAR(length=100), nullable=True),
    sa.Column('device_id', sa.VARCHAR(length=255), nullable=True),
    sa.Column('os_version', sa.VARCHAR(length=50), nullable=True),
    sa.Column('app_version', sa.VARCHAR(length=50), nullable=True),
    sa.Column('fcm_token', sa.VARCHAR(length=255), nullable=True),
    sa.Column('last_login', sa.DATETIME(), nullable=True),
    sa.Column('ip_address', sa.VARCHAR(length=45), nullable=True),
    sa.Column('location_lat', sa.FLOAT(), nullable=True),
    sa.Column('location_lng', sa.FLOAT(), nullable=True),
    sa.Column('location_timestamp', sa.DATETIME(), nullable=True),
    sa.Column('battery_level', sa.INTEGER(), nullable=True),
    sa.Column('is_tablet', sa.BOOLEAN(), nullable=True),
    sa.Column('screen_resolution', sa.VARCHAR(length=50), nullable=True),
    sa.Column('language', sa.VARCHAR(length=10), nullable=True),
    sa.Column('timezone', sa.VARCHAR(length=50), nullable=True),
    sa.Column('created_at', sa.DATETIME(), nullable=True),
    sa.Column('updated_at', sa.DATETIME(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('device_id')
    )
    with op.batch_alter_table('device_info', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_device_info_user_id'), ['user_id'], unique=False)

    op.create_table('statuses',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('user_id', sa.INTEGER(), nullable=False),
    sa.Column('text', sa.VARCHAR(length=500), nullable=True),
    sa.Column('image_filename', sa.VARCHAR(length=255), nullable=True),
    sa.Column('created_at', sa.DATETIME(), nullable=False),
    sa.Column('expires_at', sa.DATETIME(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###
